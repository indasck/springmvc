package com.microservice.ApiGateway.client;

import java.util.*;

import org.springframework.cloud.gateway.filter.GatewayFilterChain;
import org.springframework.cloud.gateway.filter.GlobalFilter;
import org.springframework.http.HttpHeaders;
import org.springframework.http.server.reactive.ServerHttpRequest;
import org.springframework.stereotype.Component;
import org.springframework.web.server.ServerWebExchange;

import jakarta.validation.constraints.AssertFalse.List;
import reactor.core.publisher.Mono;

@Component
public class clientfilter implements GlobalFilter {

	@Override
	public Mono<Void> filter(ServerWebExchange exchange, GatewayFilterChain chain) {
		// TODO Auto-generated method stub
		System.out.println("filter()...execute");
		    ServerHttpRequest request=exchange.getRequest();
		 HttpHeaders  header= request.getHeaders();
		                        Set<String> keyset =header.keySet();
		  if(!keyset.contains("secret")) {
			  throw new RuntimeException("Invalid req");
		  }
		  List<String> list= header.get("secret");
		  
		  if(!list.get(0).equals("chenna@123")) {
			  
		  }
		return chain.filter(exchange);
	}

}
